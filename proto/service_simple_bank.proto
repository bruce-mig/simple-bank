syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";
import "rpc_renew_access_token.proto";
import "rpc_create_account.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/bruce-mig/simple-bank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Simple Bank API";
        version: "1.1";
        contact: {
            name: "bruce";
            url: "https://github.com/bruce-mig";
            email: "bmigeri@gmail.com";
        };
    };

};

service SimpleBank{
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse){
        option (google.api.http) = {
            post: "/v1/create_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "Create new user";
        };
    }
    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse){
        option (google.api.http) = {
            patch: "/v1/update_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update an existing user";
            summary: "Update an existing user";
        };
    }
    rpc LoginUser (LoginUserRequest)  returns (LoginUserResponse){
        option (google.api.http) = {
            post: "/v1/login_user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login user and get access token & refresh token";
            summary: "Login user";
        };
    }
    rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
        option (google.api.http) = {
            get: "/v1/verify_email"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to verify user's email address";
            summary: "Verify email";
        };
    }
    rpc RenewAccessToken (RenewAccessTokenRequest) returns (RenewAccessTokenResponse) {
        option (google.api.http) = {
            get: "/v1/tokens/renew_access"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to renew a user's access token";
            summary: "Renew access token";
        };
    }
    rpc CreateAccount (CreateAccountRequest) returns (CreateAccountResponse) {
        option (google.api.http) = {
            get: "/v1/accounts"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a bank account for an authenticated user";
            summary: "Create a bank account";
        };
    }
}